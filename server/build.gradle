apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven'

group = 'com.github.ualegre'

def grpcVersion = '1.0.0'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "mysql:mysql-connector-java:6.0.3"

    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
}

sourceSets {
    main {
        proto {
            srcDir "$rootProject.projectDir/proto"
        }
    }
}

protobuf {
    protoc {
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
}

//apply plugin: 'idea'
//
//idea {
//    module {
//        // Not using generatedSourceDirs because of
        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
//       sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
//        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
//    }
//}

apply plugin: 'application'

startScripts.enabled = false

task contextServer(type: CreateStartScripts) {
    mainClassName = 'uk.ac.mdx.cs.ie.contextserver.ContextServer'
    applicationName = 'context-service'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(contextServer)
    fileMode = 0755
}